{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mayur\\\\webdev\\\\resources\\\\src\\\\cgpa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './cgpa.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cgpa() {\n  _s();\n\n  const subjects = [{\n    name: 'Control Engineering - Theory',\n    credits: 3\n  }, {\n    name: 'Control Engineering - Practical',\n    credits: 1\n  }, {\n    name: 'Embedded Systems - Theory',\n    credits: 3\n  }, {\n    name: 'Embedded Systems - Practical',\n    credits: 1\n  }, {\n    name: 'Analog Communication - Theory',\n    credits: 4\n  }, {\n    name: 'Analog Communication - Practical',\n    credits: 1\n  }, {\n    name: 'Measurement & Instrumentation - Theory',\n    credits: 3\n  }, {\n    name: 'Measurement & Instrumentation - Practical',\n    credits: 1\n  }, {\n    name: 'Wave Guides and Antennas',\n    credits: 3\n  }, {\n    name: 'CAO/CMOS/ESD/ALGO',\n    credits: 3\n  }]; // const subjects = [\n  //     {name : 'NMPT MAL 205', credits: 4},\n  //     {name : 'DSP ECL 304    ', credits: 3},\n  //     {name : 'DSP ECP 304    ', credits: 1},\n  //     {name : 'EMFT ECL 305   ', credits: 4},\n  //     {name : 'DCMP ECL 203   ', credits: 3},\n  //     {name: 'DCMP ECP 203    ', credits: 1},\n  //     {name: 'EPDW ECP 307    ', credits: 1},\n  //     {name:'ACD ECL 308  ', credits: 3},\n  //     {name:'ACD ECP 308  ', credits: 1},\n  //     {name: 'OC/HM   ', credits: 3}\n  // ]\n\n  const [cred, setCred] = useState(0);\n  const [calculated, setCalculated] = useState(false);\n  const [mark, setMark] = useState(0);\n  const [SG, setSG] = useState(0);\n  const [studentlist, setList] = useState([]);\n  const [CG, setCG] = useState(0);\n  const [credprev, setPrevCred] = useState(0);\n  const [credsum, setCredSum] = useState(0);\n  const [newCG, setNewCG] = useState(0);\n  const [flag, setFlag] = useState(false);\n\n  const AppendList = e => {\n    if (!Number.isInteger(Number(mark))) alert(\"Enter only integer values\");else if (Number(mark) === 0) {\n      console.log(\"ERROR\");\n      alert(\"Field should not be empty\");\n    } else if (Number(mark) > 10 || Number(mark) < 0) {\n      alert(\"Invalid Value entered!\");\n    } else {\n      studentlist.push(Number(mark));\n      console.log(studentlist);\n      document.getElementById(e.target.id).disabled = true;\n      setMark(0);\n    }\n  };\n\n  const calcSG = () => {\n    var sumMarks = 0;\n    var sumCred = 0;\n    var SGcalc = 0;\n\n    if (studentlist.length < 9) {\n      alert(\"Enter grades of all subjects!\");\n    } else {\n      for (var i = 0; i < studentlist.length; i++) {\n        var prod = studentlist[i] * subjects[i].credits;\n        sumMarks = sumMarks + prod;\n        sumCred += subjects[i].credits;\n      }\n\n      SGcalc = (sumMarks / sumCred).toFixed(2);\n      setCredSum(sumCred);\n      setSG(SGcalc);\n      setCalculated(true);\n      setList([]);\n    }\n  };\n\n  const CGcalc = () => {\n    if (CG === 0 || credprev === 0) {\n      alert(\"Fill all required fields!\");\n    } else {\n      var prod = CG * credprev;\n      prod = prod + Number(credsum) * Number(SG);\n      prod = (prod / (Number(credsum) + Number(credprev))).toFixed(2);\n      setNewCG(prod);\n      setFlag(true);\n      console.log(Number(SG), credsum);\n    }\n  };\n\n  let subjectList = subjects.length > 0 && subjects.map((item, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"leftform\",\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightform\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            width: \"3rem\"\n          },\n          type: \"number\",\n          min: \"4\",\n          max: \"10\",\n          placeholder: \"    /10\",\n          className: \"outline border-2\",\n          onChange: e => setMark(e.target.value),\n          onSubmit: AppendList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"savebtn px-2\",\n          id: i,\n          onClick: AppendList,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this);\n  });\n\n  const refresh = () => {\n    setCG(0);\n    setCalculated(false);\n    setCred(0);\n    setCredSum(0);\n    setFlag(false);\n    setList([]);\n    setMark(0);\n    setNewCG(0);\n    setPrevCred(0);\n    setSG(0);\n    subjects.map((item, i) => {\n      document.getElementById(i).disabled = false;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fkex justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CGPA Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: refresh,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter grades to calculate current sem SGPA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [subjectList, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn\",\n            onClick: calcSG,\n            children: \"Calculate SG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: calculated ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Your SGPA for the current sem: \", SG, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !calculated ? /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Directly calculate CGPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"SGPA for current sem: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              max: \"10\",\n              min: \"3\",\n              className: \"border-2\",\n              onChange: e => setSG(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"Credits completed in this sem: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              max: \"10\",\n              min: \"3\",\n              className: \"border-2\",\n              onChange: e => setCredSum(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"CGPA till last sem: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              max: \"10\",\n              min: \"3\",\n              className: \"border-2\",\n              onChange: e => setCG(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"Credits completed till last sem: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              max: \"10\",\n              min: \"3\",\n              className: \"border-2\",\n              onChange: e => setPrevCred(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn px-6 py-3 mb-4\",\n              onClick: CGcalc,\n              children: \"Calculate CG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: flag ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Your CGPA for the current sem: \", newCG, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 80\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cgpa, \"ASADSBEurxKSqg8mDoFmCpaz/hA=\");\n\n_c = Cgpa;\nexport default Cgpa;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cgpa\");","map":{"version":3,"sources":["C:/Mayur/webdev/resources/src/cgpa.js"],"names":["React","useState","Cgpa","subjects","name","credits","cred","setCred","calculated","setCalculated","mark","setMark","SG","setSG","studentlist","setList","CG","setCG","credprev","setPrevCred","credsum","setCredSum","newCG","setNewCG","flag","setFlag","AppendList","e","Number","isInteger","alert","console","log","push","document","getElementById","target","id","disabled","calcSG","sumMarks","sumCred","SGcalc","length","i","prod","toFixed","CGcalc","subjectList","map","item","width","value","refresh"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport './cgpa.css'\r\n\r\n\r\nfunction Cgpa() {\r\n    const subjects = [\r\n        {name : 'Control Engineering - Theory', credits: 3},\r\n        {name : 'Control Engineering - Practical', credits: 1},\r\n        {name : 'Embedded Systems - Theory', credits: 3},\r\n        {name : 'Embedded Systems - Practical', credits: 1},\r\n        {name : 'Analog Communication - Theory', credits: 4},\r\n        {name: 'Analog Communication - Practical', credits: 1},\r\n        {name: 'Measurement & Instrumentation - Theory', credits: 3},\r\n        {name:'Measurement & Instrumentation - Practical', credits: 1},\r\n        {name:'Wave Guides and Antennas', credits: 3},\r\n        {name: 'CAO/CMOS/ESD/ALGO', credits: 3}\r\n    ]\r\n    // const subjects = [\r\n    //     {name : 'NMPT MAL 205', credits: 4},\r\n    //     {name : 'DSP ECL 304    ', credits: 3},\r\n    //     {name : 'DSP ECP 304    ', credits: 1},\r\n    //     {name : 'EMFT ECL 305   ', credits: 4},\r\n    //     {name : 'DCMP ECL 203   ', credits: 3},\r\n    //     {name: 'DCMP ECP 203    ', credits: 1},\r\n    //     {name: 'EPDW ECP 307    ', credits: 1},\r\n    //     {name:'ACD ECL 308  ', credits: 3},\r\n    //     {name:'ACD ECP 308  ', credits: 1},\r\n    //     {name: 'OC/HM   ', credits: 3}\r\n    // ]\r\n    const [cred,setCred] = useState(0);\r\n    const [calculated,setCalculated] = useState(false);\r\n    const [mark,setMark] = useState(0);\r\n     const [SG,setSG] = useState(0);\r\n    const [studentlist,setList] = useState([]);\r\n    const [CG,setCG] = useState(0);\r\n    const [credprev,setPrevCred] = useState(0);\r\n    const [credsum,setCredSum] = useState(0);\r\n    const [newCG,setNewCG] = useState(0);\r\n    const [flag,setFlag] = useState(false);\r\n\r\n    const AppendList = (e) => {\r\n        if(!Number.isInteger(Number(mark)))\r\n        alert(\"Enter only integer values\");\r\n        else if(Number(mark)===0)\r\n        {console.log(\"ERROR\");\r\n\r\n        alert(\"Field should not be empty\");\r\n         }\r\n         else if(Number(mark)>10 || Number(mark)<0)\r\n         {\r\n             alert(\"Invalid Value entered!\")\r\n         }\r\n         else\r\n       {\r\n        studentlist.push(Number(mark));\r\n        console.log(studentlist);\r\n        document.getElementById(e.target.id).disabled = true;\r\n        setMark(0);\r\n       }\r\n    }\r\n\r\n    const calcSG= () => {\r\n        var sumMarks = 0;\r\n        var sumCred = 0;\r\n        var SGcalc = 0;\r\n        if(studentlist.length<9)\r\n        {\r\n            alert(\"Enter grades of all subjects!\");\r\n        }\r\n        else{\r\n            for( var i=0;i<studentlist.length;i++)\r\n                {\r\n                    var prod = studentlist[i] * subjects[i].credits;\r\n                    sumMarks = sumMarks + prod;\r\n                    sumCred += subjects[i].credits;\r\n                }\r\n                SGcalc = (sumMarks/sumCred).toFixed(2);\r\n                setCredSum(sumCred);\r\n                setSG(SGcalc);\r\n                setCalculated(true);\r\n                setList([]);\r\n        }\r\n\r\n    }\r\n    const CGcalc = ()=> {\r\n        if(CG===0 || credprev===0)\r\n        {\r\n            alert(\"Fill all required fields!\");\r\n        }\r\n        else{\r\n        var prod = CG*credprev;\r\n        prod = prod + (Number(credsum)*Number(SG));\r\n        prod = (prod/(Number(credsum)+Number(credprev))).toFixed(2);\r\n        setNewCG(prod);\r\n        setFlag(true);\r\n        console.log(Number(SG),credsum);\r\n        }\r\n    }\r\n    let subjectList = subjects.length > 0 &&\r\n        subjects.map((item, i) => {\r\n        return (\r\n          <div className=\"fields\">\r\n              <label className=\"leftform\">{item.name}</label>\r\n              <div className=\"rightform\">\r\n                <input style={{width:\"3rem\"}} type=\"number\" min=\"4\" max=\"10\" placeholder='    /10' className=\"outline border-2\" onChange={(e) => setMark(e.target.value)} onSubmit={AppendList}></input>\r\n                <br />\r\n                <button type=\"button\" className=\"savebtn px-2\" id={i} onClick={AppendList}  >\r\n                  Save\r\n                </button>\r\n              </div>\r\n              <br />\r\n              <br />\r\n          </div>\r\n\r\n      )})\r\n    const refresh =()=>{\r\n        setCG(0);\r\n        setCalculated(false);\r\n        setCred(0);\r\n        setCredSum(0);\r\n        setFlag(false);\r\n        setList([]);\r\n        setMark(0);\r\n        setNewCG(0);\r\n        setPrevCred(0);\r\n        setSG(0);\r\n        subjects.map((item,i)=>{document.getElementById(i).disabled = false;})\r\n\r\n    }\r\n    return (\r\n\r\n        <div className=\"flex flex-col h-auto\">\r\n        <div className=\"fkex justify-center\">\r\n          <h1>CGPA Calculator</h1>\r\n          <button type=\"button\" className =\"btn\" onClick={refresh}>Refresh</button>\r\n        </div>\r\n        <div className=\"flex\">\r\n\r\n\r\n        <div className=\"\">\r\n          <h4>Enter grades to calculate current sem SGPA</h4>\r\n          <form action=\"\">\r\n                  {subjectList}\r\n                  <button type = \"button\" className =\"btn\" onClick={calcSG}>Calculate SG</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n            <div className=\"\">\r\n                {calculated ? <h3>Your SGPA for the current sem: {SG} </h3> : <p> </p>}\r\n            </div>\r\n            <div>\r\n                    {!calculated?\r\n                    <form action=\"\">\r\n                        <h4>Directly calculate CGPA</h4>\r\n                    <label htmlFor=\"\">SGPA for current sem: </label>\r\n                    <input type=\"number\" step=\"0.01\" max=\"10\" min=\"3\" className=\"border-2\" onChange={(e) => setSG(e.target.value)}/>\r\n                    <br /><br />\r\n                    <label htmlFor=\"\">Credits completed in this sem: </label>\r\n\r\n                    <input type=\"number\" max=\"10\" min=\"3\" className=\"border-2\" onChange={(e) => setCredSum(e.target.value)}/>\r\n\r\n                    </form>\r\n                     :\r\n                     null }\r\n                </div>\r\n            <div>\r\n                {/* <h4>Calculate your CGPA till this sem: </h4> */}\r\n\r\n                <form action=\"\">\r\n                    <br />\r\n                    <label htmlFor=\"\">CGPA till last sem: </label>\r\n                    <input type=\"number\" step=\"0.01\" max=\"10\" min=\"3\" className=\"border-2\" onChange={(e) => setCG(e.target.value)}/>\r\n                    <br /><br />\r\n                    <label htmlFor=\"\">Credits completed till last sem: </label>\r\n\r\n                    <input type=\"number\" max=\"10\" min=\"3\" className=\"border-2\" onChange={(e) => setPrevCred(e.target.value)}/>\r\n                    <br /><br />\r\n                    <button type=\"button\" className =\"btn px-6 py-3 mb-4\" onClick={CGcalc}>Calculate CG</button>\r\n                    <p className=\"mt-4\"></p>\r\n                </form>\r\n\r\n                <div className=\"\">\r\n                    {flag ? <h3>Your CGPA for the current sem: {newCG} </h3> : <p> </p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cgpa\r\n"]},"metadata":{},"sourceType":"module"}